---

- name: verify
  hosts: all
  tasks:

    # -------------------------------------------------------------------------
    # check package
    # -------------------------------------------------------------------------

    - name: check package installation
      ansible.builtin.package:
        name: systemd
        state: present
      check_mode: yes
      register: __systemd_resolved_installation

    - name: debug package installation
      ansible.builtin.debug:
        var: __systemd_resolved_installation

    - name: assert on package installation
      ansible.builtin.assert:
        that:
          - not __systemd_resolved_installation.failed
          - not __systemd_resolved_installation.changed
        success_msg: 'package is installed'

    # -------------------------------------------------------------------------
    # check configuration
    # -------------------------------------------------------------------------

    - name: check configuration file
      ansible.builtin.stat:
        path: /etc/systemd/resolved.conf.d/60-ansible.conf
        get_attributes: no
        get_checksum: no
        get_mime: no
      check_mode: yes
      register: __systemd_resolved_configuration

    - name: debug configuration file
      ansible.builtin.debug:
        var: __systemd_resolved_configuration

    - name: assert on configuration file
      ansible.builtin.assert:
        that:
          - __systemd_resolved_configuration.stat.exists
        success_msg: 'configuration file exists'

    # -------------------------------------------------------------------------
    # check service
    # -------------------------------------------------------------------------

    - name: check service
      ansible.builtin.service:
        name: systemd-resolved
        enabled: yes
        state: started
      check_mode: yes
      register: __systemd_resolved_service

    - name: debug service
      ansible.builtin.debug:
        var: __systemd_resolved_service

    - name: assert on service
      ansible.builtin.assert:
        that:
          - not __systemd_resolved_service.failed
          - not __systemd_resolved_service.changed
          - __systemd_resolved_service.state == 'started'
          - __systemd_resolved_service.enabled
        success_msg: 'service is both enabled and started'

    # -------------------------------------------------------------------------
    # check commands
    # -------------------------------------------------------------------------

    - name: 'check if `resolvectl status` works'
      ansible.builtin.command: resolvectl status
      changed_when: no
      register: __systemd_resolved_resolvectl_status

    - name: 'debug `resolvectl status`'
      ansible.builtin.debug:
        var: __systemd_resolved_resolvectl_status

    - name: 'check if `systemd-resolve` can resolve'
      ansible.builtin.command: systemd-resolve archlinux.org
      changed_when: no
      register: __systemd_resolved_systemd_resolve

    - name: 'debug `systemd-resolve`'
      ansible.builtin.debug:
        var: __systemd_resolved_systemd_resolve

...
